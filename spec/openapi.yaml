openapi: 3.0.3
info:
  title: Buy Better Admin
  description: API used for Buy Better admin system and scraping service
  version: 0.0.1
servers:
  - url: 'http://localhost:3000/v1'
paths:
  /unmatched_category:
    get:
      summary: Get unmatched category
      description: Get unmatched category, filter by page number and page size
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: current page
        - in: query
          name: page_size
          schema:
            type: integer
          description: number of items per page
      responses:
        401:
          $ref: '#/components/responses/UnauthorizedError'
        422:
          description: Invalid request body
        500:
          $ref: '#/components/responses/InternalServerError'
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUnmatchedCatRes'
  /category:
    get:
      summary: Get all category
      description: Get all deepest category
      security:
        - bearerAuth: []
      responses:
        401:
          $ref: '#/components/responses/UnauthorizedError'
        500:
          $ref: '#/components/responses/InternalServerError'
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAllCategoryRes"

  /refresh_token:
    post:
      summary: Refresh token
      description: Renew token by using refresh token via Cookies
      security:
        - cookieAuth: []
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginRes'
        400:
          description: No refresh token in Cookies
        401:
          description: Invalid token
        403:
          description: Forbidden
        500:
          $ref: '#/components/responses/InternalServerError'

  /user:
    delete:
      summary: delete user
      description: delete user given by user id
      security:
        - bearerAuth: [ ]
      responses:
        204:
          description: Successful operation with no content
        401:
          $ref: '#/components/responses/UnauthorizedError'
        422:
          description: Invalid request body
        500:
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginReq'

    patch:
      summary: update user status
      description: activate or deactivate user
      security:
        - bearerAuth: []
      responses:
        204:
          description: Successful operation with no content
        401:
          $ref: '#/components/responses/UnauthorizedError'
        422:
          description: Invalid request body
        500:
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserReq'

    get:
      summary: Get all users
      description: Get all admin users, including inactive user
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAllUsersRes"
        401:
          $ref: '#/components/responses/UnauthorizedError'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create user
      description: Create admin user
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginReq'
      responses:
        401:
          $ref: '#/components/responses/UnauthorizedError'
        201:
          description: Successful operation
        422:
          description: Invalid request body
        409:
          description: Duplicate username
        500:
          $ref: '#/components/responses/InternalServerError'

  /logout:
    delete:
      summary: Logout
      description: Logout by remove cookies
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgRes'

  /login:
    post:
      summary: Authenticate
      description: Authenticate by username and password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginReq'
      responses:
        200:
          description: Successful operation
          headers:
            Set-Cookie:
              schema:
                type: string
                example: refresh_token=v4.local.cqPaeKq2LaU-E6q2oxEIjj...; Path=/; HttpOnly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginRes'
        422:
          description: Invalid request body
        404:
          description: Wrong credential
        500:
          $ref: '#/components/responses/InternalServerError'


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: PasetoV4
    cookieAuth:
      type: apiKey
      in: cookie
      name: refresh_token
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    InternalServerError:
      description: Internal server error
  schemas:
    GetUnmatchedCatRes:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              path:
                type: string
                example: Electronic > PC > Gaming PC
              category_level:
                type: integer
                example: 2
        metadata:
          $ref: '#/components/schemas/MetaDataRes'

    MetaDataRes:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        page_size:
          type: integer
          example: 10
        last_page:
          type: integer
          example: 11
        total_records:
          type: integer
          example: 102

    GetAllCategoryRes:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: Gaming PC
              has_child:
                type: boolean
                example: false
              path:
                type: string
                example: Electronic > PC > Gaming PC

    GetAllUsersRes:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              username:
                type: string
              active:
                type: boolean

    MsgRes:
      required:
        - msg
      type: object
      properties:
        msg:
          type: string
          example: message from server

    LoginReq:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
          example: admin
        password:
          type: string
          example: admin1234

    LoginRes:
      type: object
      properties:
        token:
          type: string
          example: v4.local.KkgD7tL-RvN2Cbfk-_Qt....

    UpdateUserReq:
      type: object
      required:
        - id
        - active
      properties:
        id:
          type: integer
          example: 1
        active:
          type: boolean
          example: false

    DeleteUserReq:
      required:
        - id
      properties:
        id:
          type: integer
          example: 1

